/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode * & ptr, int & val, TreeNode * & result)
    {
        if (ptr == 0)
        {
            result = NULL;
            return;
        }
        
        if (ptr->val == val)
        {
            result = ptr;
            return;
        }
        
        if (ptr->left == 0 && ptr->right == 0)
        {
            return;
        }
        
        else
        {
            if (ptr->left != 0)
            {
                dfs(ptr->left, val, result);
            }
            
            if (ptr->right != 0)
            {
                dfs(ptr->right, val, result);
            }
        }
    }
    
    TreeNode* searchBST(TreeNode* root, int val) 
    {
        TreeNode * result = NULL;
        
        dfs(root, val, result);
        
        return result;
        
        
    }
};
