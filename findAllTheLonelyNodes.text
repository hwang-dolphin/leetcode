/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void dfs(TreeNode* ptr, vector<int> & result)
    {
        if (ptr == 0)
        {
            return;
        }
        
        if (ptr->left == 0 && ptr->right == 0)
        {
            return;
        }
        
        if (ptr->left == 0 || ptr->right == 0)
        {
            if (ptr->left != 0)
            {
                result.push_back(ptr->left->val);
            }
            
            else if (ptr->right != 0)
            {
                result.push_back(ptr->right->val);
            }
        }
        
        
        if (ptr->left != 0)
        {
            dfs(ptr->left, result);
        }
        
        if (ptr->right != 0)
        {
            dfs(ptr->right, result);
        }
    }
    
    vector<int> getLonelyNodes(TreeNode* root) 
    {
        vector<int> result;
        
        dfs(root, result);
        
        return result;
    }
};

